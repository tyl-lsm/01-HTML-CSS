//页面定位
1、定位：将页面中的元素摆放到页面中的任意位置
      position//子绝父相
	值 static//默认没有开启定位
	    relative//相对定位
	    absolute//绝对定位
	    fixed//固定定位
相对定位：（相对于自身）
1、开启后如果不设置偏移量元素位置不会发生变化 
2、相对定位元素相对于其自身在文档流中的位置来定位
3、相对定位的元素不会脱离标准流（float会脱离）
4、相对定位不会改变元素的性质（块元素还是块元素，行元素还是行元素 ）
5、相对定位的元素会提升一个层级 
//偏移量：left，right，top，bottom

//绝对定位（相对于父标签）
1、不设置偏移量位置不会改变
2、绝对定位的元素是相对于距离他最近的开启了定位的祖先元素进行定位，
若所有祖先元素都没有开启定位，相对于浏览器窗口进行定位
3、绝对定位元素会脱离标准流
4、绝对定位会使元素的性质发生变化，内联变块，块的宽度和高度 都会被
内容撑开，并且不会独占一行
5、提升一个层级

//固定定位（相对于浏览器窗口）
1、大部分特点与绝对定位一样
2、永远相对于浏览器窗口进行定位 ，不会随滚动条而滚动


z-index//设置层级（值阿拉伯数字）
//标签的层级关系
1、定位元素>浮动元素>文档流中的元素
2、元素开启定位后，可以通过z-index设置元素层级
3、若z-index值一样，或者都没有设置z-index，则下面的元素会优先显示
4、父元素不会覆盖子元素（因为子元素永远在父元素里面）


//圆角：border-radius



//背景background........
1、background-color//规定要使用的背景颜色。
2、background-position//规定背景图像的位置。
	值：left；right；top；bottom；center或x y 偏移量

3、background-size//规定背景图片的尺寸。
	cover//把背景图片扩展至足够大，以便于背景图片完全覆盖背景区域
		有些部分可能不会显示在区域中
	contain//把图片扩展至最大尺寸，以便于其宽度和高度完全适应内容区域

4、background-repeat//规定如何重复背景图像。
		值：no repeat；repeat-x；repeat-y

5、background-origin//规定背景图片的定位区域。

6、background-clip//规定背景的绘制区域。

7、background-attachment//规定背景图像是否固定或者随着页面的其余部分滚动。
	值：scroll（默认值，滚动） fixed（相对于浏览器窗口定位）

8、background-image//规定要使用的背景图像。
	值url(路径)//若背景图片大于元素，默认显示图片左上角
		//若小于元素则平铺充满
		//等于 全部显示

9、inherit//规定应该从父元素继承 background 属性的设置。
background//背景的简写，一切与背景相关的可以直接写在后面，无顺序要求

rgba()//a为颜色透明度
opacity//设置透明度




//雪碧图/精灵图片
1、概念：运用在众多使用了很多小图标的网站上，相对于把每张小图标以png
格式文件的形式引用到网页上，使用雪碧图只需要引用一张图片



//高度塌陷
1、产生原因：父元素在文档流中高度默认是被子元素撑开的（没有设置的情况下），
	当子元素脱离标准流后将无法撑起父元素
2、后果：父元素的高度一旦塌陷，标准流中的其他元素就会上移，使页面混乱
解决方法一：开启父元素的BFC（块级格式化环境）默认关闭
	    开启BFC后的特点 父元素的垂直外边距不会与子元素重叠
			不会被浮动元素覆盖
			可以包含浮动元素
	如何开启BFC：设置浮动/定位/设置元素的属性为inline-block（不建议用）
		设置overflow为一个默认值：一般用overflow:hidden	
解决方法二：在塌陷的父元素的最后添加一个空白的div，然后清除该div的浮动
//清除浮动clear:
值：none//默认值，不清除浮动
       left//清除左侧浮动元素对当前元素的影响
      right//	清除右侧浮动元素对当前元素的影响
      both//清除两侧浮动元素对当前元素的影响
解决方法三：使用after伪类，向父元素后添加一个块元素，并对其清除浮动
	用法：.clearfix:after{
		content:'';
		display:block;
		clear:both;
	             }



//垂直外边距重叠：子元素和父元素相邻的垂直外边距会发生重叠，子元素的外
		边距会传递给父元素
解决办法：1、在子元素前使用空的table标签可以隔离父子元素的边距，阻止外边距重叠
	2、父元素前使用before伪元素
	用法：  .box4::before{
		content:'';
		display:table;
	            }
.clearfix::before
.clearfix::after{
	content:'';
	display:block;
	clear:both;
}


//序号选择器
1、不区分类型
	:first-child//选中同级别中第一个标签
	:last-child//选中同级别中最后一个标签
	:nth-last-child(n)//选中同级别中第n个标签
	:nth-child(n)//选中同级别中第n个标签
	:only-child//选中同级别中唯一子元素
2、区分类型
	:first-of-type//选中同级别中同类型的第一个标签
	:last-of-type//选中同级别中同类型的最后一个标签
	:nth-of-type(n)//选中同级别中同类型的第n个标签
	:nth-last-of-type(n)//选中同级别同类型倒数第n个标签
	:only-of-type//选中同级别别中唯一同类型子元素标签
3、奇偶选择
	:nth-child(odd)//选择级别中所有奇数（从第一个开始的与冒号前前标签同类型的）
	:nth-child(even)//选择级别中所有偶数（从第一个开始的与冒号前前标签同类型的）
	:nth-child(xn+y)//x,y是 用户自定义的，n为计数器，到元素的总个数停止


[class^="icon-"]{}//找到所有类中以icon-开头的标签

[class^="icon-"],
[class*="（空格）icon-"]{}//找到所有类中以-icon-开头的及所有类中含有（空格）icon-的标签

&gt;//大于号
&nbsp//空格













